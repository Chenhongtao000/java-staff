单一职责原则 Single Responsibility Principle （实际也就是字面意思）
	对于单一职责原则，我的建议是接口一定要做到单一职责，类的设计尽量做到只有一个原因引起变化
里氏替换原则 Liskov Substitution Principle
	所有引用基类的地方必须能透明地使用其子类的对象
依赖倒置原则 Dependence Inversion Principle
	高层模块不应该依赖低层模块，两者都应该依赖其抽象；
    抽象不应该依赖细节；
    细节应该依赖抽象。
接口隔离原则 
    建立单一接口，不要建立臃肿庞大的接口，接口尽量细化，同时接口中的方法尽量少，
	指提供给每个模块的都应该是单一接口
迪米特法则 Law of Demeter
	一个类应该对自己需要耦合或调用的类知道得最少 1. 只和朋友交流
开闭原则
	一个软件产品只要在生命期内，都会发生变化，既然变化是一个既定的事实，我们就应
	该在设计时尽量适应这些变化，以提高项目的稳定性和灵活性，真正实现“拥抱变化”。开闭
	原则告诉我们应尽量通过扩展软件实体的行为来实现变化，而不是通过修改已有的代码来完
	成变化，它是为软件实体的未来事件而制定的对现行开发设计进行约束的一个原则
	
	


